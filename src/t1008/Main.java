package t1008;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Calendar;import java.util.Date;import java.util.GregorianCalendar;import java.util.Scanner;public class Main {	public static void main(String[] args) {		Scanner scanner = new Scanner(System.in);		int n = Integer.parseInt(scanner.nextLine());		if (n < 1) {			System.out.println("n must > 0");			return;		} else if (n > 365) {			System.out.println("n must <= 365");			return;		}		String[] nums = new String[n];		for (int i = 0; i < n; i++) {			nums[i] = scanner.nextLine();			// System.out.println(nums[i]);			String[] arr = nums[i].split(" ");			String str1 = arr[0];			String str2 = arr[1];			System.out.println(days(str1, str2));		}	}	static String dateFormat = "yyyy-MM-dd";	static SimpleDateFormat format = new SimpleDateFormat(dateFormat);	public static int days(String date1, String date2) {		if (date1.equals(date2)) {			if (dayGood(date1))				return 1;			else {				return 0;			}		}		String tmp;		if (date1.compareTo(date2) > 0) { // 确保 date1的日期不晚于date2			tmp = date1;			date1 = date2;			date2 = tmp;		}		tmp = format.format(str2Date(date1).getTime());		int num = 0;		while (tmp.compareTo(date2) < 0) {//			System.out.println(tmp.toString());			if (dayGood(tmp) && chkDateFormat(tmp))				num++;			tmp = format.format(str2Date(tmp).getTime() + 3600 * 24 * 1000);		}		return num;	}	private static Date str2Date(String str) {		if (str == null)			return null;		try {			return format.parse(str);		} catch (ParseException e) {			e.printStackTrace();		}		return null;	}	public static boolean dayGood(String time) {		try {//						Date dateTime = format.parse(time);			int year = dateTime.getYear();			int month = dateTime.getMonth();			int date = dateTime.getDate();//.getDay();			int day = dateTime.getDay();//			System.out.println("month="+month+",day="+date);			if(month == 0 && date== 1)				return false;			if (month == 5-1 && (date == 1 || date == 2 || date == 3)) {//				System.out.println("false");				return false;			}			if (month == 10-1					&& (date == 1 || date == 2 || date == 3 || date == 4							|| date == 5 || date == 6 || date == 7)) {//				System.out.println("false");				return false;			}						if (dayForWeek(time) == 7 || dayForWeek(time) == 6) {//			System.out.println("false");				return false;		}		} catch (Exception e) { 			e.printStackTrace();		}//		System.out.println("true");		return true;	}	 public static boolean chkDateFormat(String date) {	        try {	            	            Calendar calendar = GregorianCalendar.getInstance();	            // 当 Calendar 处于 non-lenient 模式时，如果其日历字段中存在任何不一致性，它都会抛出一个异常。	            calendar.setLenient(false);	            calendar.setTime(format.parse(date));	           // 如果日期错误,执行该语句,必定抛出异常.	            calendar.get(Calendar.YEAR);	        } catch (IllegalArgumentException e) {	            return false;	        } catch (ParseException e) { 	        	return false;//				e.printStackTrace();			}	        return true;	    }	 	/**	 * 判断当前日期是星期几<br>	 * <br>	 * 	 * @param pTime	 *            修要判断的时间<br>	 * @return dayForWeek 判断结果<br>	 * @Exception 发生异常<br>	 */	public static int dayForWeek(String pTime) throws Exception {		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");		Calendar c = Calendar.getInstance();		c.setTime(format.parse(pTime));		int dayForWeek = 0;		if (c.get(Calendar.DAY_OF_WEEK) == 1) {			dayForWeek = 7;		} else {			dayForWeek = c.get(Calendar.DAY_OF_WEEK) - 1;		}		return dayForWeek;	}}